{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","start","setStart","sortBy","setSortBy","sortRevers","setSortRevers","className","type","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBIC,IAAaJ,EAASO,MACxBD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKJ,EAASW,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKV,EAASa,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKXT,GACFC,EAAaS,UAGRT,G,SA9BJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAMgB,EAAgB,WAC3B,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAASjB,EAASO,MAA9C,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAOA,OACE,sBAAKC,UAAU,YAAf,WACc,IAAVN,GAEE,wBACEO,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMP,GAAUD,IAH3B,mBAQHA,GAEG,sBAAKM,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAML,EAAUrB,EAASW,UAHpC,iCAQA,wBACEc,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAML,EAAUrB,EAASa,SAHpC,4BAQA,wBACEY,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMH,GAAeD,IAHhC,qBAQA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAhDA,WACZL,EAAUrB,EAASO,MACnBgB,GAAc,IA2CJ,sBAQF,oBAAIC,UAAU,QAAd,SACGtB,EAAkBD,EAAiBmB,EAAQE,GACzCK,KAAI,SAAAC,GAAI,OACP,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,eC5GnDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.21fba3aa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [start, setStart] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n  const [sortRevers, setSortRevers] = useState(false);\n\n  const reset = () => {\n    setSortBy(SortType.NONE);\n    setSortRevers(false);\n  };\n\n  return (\n    <div className=\"container\">\n      {(start === false)\n        && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setStart(!start)}\n          >\n            Start\n          </button>\n        )}\n      {start\n        && (\n          <div className=\"App\">\n            <div className=\"App__buttons\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setSortBy(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setSortBy(SortType.LENGTH)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setSortRevers(!sortRevers)}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n            <ul className=\"Goods\">\n              {getReorderedGoods(goodsFromServer, sortBy, sortRevers)\n                .map(item => (\n                  <li className=\"Goods__item\" key={item}>{item}</li>\n                ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}